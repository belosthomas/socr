language: python
python:
  - "3.6"
env:
  matrix:
    - CUDA_VER = 8.0.61-1
    - CUDA_APT_VER=${CUDA_VER%-*}
    - CUDA_APT_VER=${CUDA_APT_VER/./-}
install:
  - wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_${CUDA_VER}_amd64.deb
  - sudo dpkg -i cuda-repo-ubuntu1404_8.0.61-1_amd64.deb
  - rm cuda-repo-ubuntu1404_8.0.61-1_amd64.deb
  - sudo apt-get install -y cuda-drivers cuda-core-${CUDA_APT_VER} cuda-cudart-dev-${CUDA_APT_VER} cuda-cufft-dev-${CUDA_APT_VER}
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # Replace dep1 dep2 ... with your dependencies
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment
  - $HOME/miniconda/bin/python3 -m pip install cython
  - $HOME/miniconda/bin/python3 setup.py install_requirements
  - $HOME/miniconda/bin/python3 setup.py build_ext --inplace
# command to run tests
script:
  - python3 -m socr
